{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar PropTypes = _interopRequireWildcard(require(\"prop-types\"));\n\nvar _useMapControl2 = _interopRequireWildcard(require(\"../components/use-map-control\"));\n\nvar pixelRatio = typeof window !== 'undefined' && window.devicePixelRatio || 1;\nvar propTypes = Object.assign({}, _useMapControl2.mapControlPropTypes, {\n  redraw: PropTypes.func.isRequired\n});\nvar defaultProps = {\n  captureScroll: false,\n  captureDrag: false,\n  captureClick: false,\n  captureDoubleClick: false,\n  capturePointerMove: false\n};\n\nfunction CanvasOverlay(props) {\n  var _useMapControl = (0, _useMapControl2[\"default\"])(props),\n      context = _useMapControl.context,\n      containerRef = _useMapControl.containerRef;\n\n  var _useState = (0, React.useState)(null),\n      _useState2 = (0, _slicedToArray2[\"default\"])(_useState, 2),\n      ctx = _useState2[0],\n      setDrawingContext = _useState2[1];\n\n  (0, React.useEffect)(function () {\n    setDrawingContext(containerRef.current.getContext('2d'));\n  }, []);\n  var viewport = context.viewport,\n      isDragging = context.isDragging;\n\n  if (ctx) {\n    ctx.save();\n    ctx.scale(pixelRatio, pixelRatio);\n    props.redraw({\n      width: viewport.width,\n      height: viewport.height,\n      ctx: ctx,\n      isDragging: isDragging,\n      project: viewport.project,\n      unproject: viewport.unproject\n    });\n    ctx.restore();\n  }\n\n  return React.createElement(\"canvas\", {\n    ref: containerRef,\n    width: viewport.width * pixelRatio,\n    height: viewport.height * pixelRatio,\n    style: {\n      width: \"\".concat(viewport.width, \"px\"),\n      height: \"\".concat(viewport.height, \"px\"),\n      position: 'absolute',\n      left: 0,\n      top: 0\n    }\n  });\n}\n\nCanvasOverlay.propTypes = propTypes;\nCanvasOverlay.defaultProps = defaultProps;\nvar _default = CanvasOverlay;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["D:\\Side Projects\\maptravelapp\\frontend\\node_modules\\react-map-gl\\src\\overlays\\canvas-overlay.js"],"names":["pixelRatio","window","propTypes","mapControlPropTypes","redraw","PropTypes","isRequired","defaultProps","captureScroll","captureDrag","captureClick","captureDoubleClick","capturePointerMove","context","containerRef","ctx","setDrawingContext","viewport","isDragging","props","width","height","project","unproject","position","left","top","CanvasOverlay"],"mappings":";;;;;;;;;;;;;AAoBA,IAAA,KAAA,GAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AAEA,IAAA,SAAA,GAAA,uBAAA,CAAA,OAAA,CAAA,YAAA,CAAA,CAAA;;AACA,IAAA,eAAA,GAAA,uBAAA,CAAA,OAAA,CAAA,+BAAA,CAAA,CAAA;;AAGA,IAAMA,UAAU,GAAI,OAAA,MAAA,KAAA,WAAA,IAAiCC,MAAM,CAAxC,gBAAC,IAApB,CAAA;AAEA,IAAMC,SAAS,GAAG,MAAM,CAAN,MAAA,CAAA,EAAA,EAAkBC,eAAAA,CAAlB,mBAAA,EAAuC;AACvDC,EAAAA,MAAM,EAAEC,SAAS,CAATA,IAAAA,CAAeC;AADgC,CAAvC,CAAlB;AAIA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,aAAa,EADM,KAAA;AAEnBC,EAAAA,WAAW,EAFQ,KAAA;AAGnBC,EAAAA,YAAY,EAHO,KAAA;AAInBC,EAAAA,kBAAkB,EAJC,KAAA;AAKnBC,EAAAA,kBAAkB,EAAE;AALD,CAArB;;AAQA,SAAA,aAAA,CAAA,KAAA,EAA8B;AAAA,MAAA,cAAA,GACI,CAAA,GAAA,eAAA,CAAA,SAAA,CAAA,EADJ,KACI,CADJ;AAAA,MACrBC,OADqB,GAAA,cAAA,CAAA,OAAA;AAAA,MACZC,YADY,GAAA,cAAA,CAAA,YAAA;;AAAA,MAAA,SAAA,GAEK,CAAA,GAAA,KAAA,CAAA,QAAA,EAFL,IAEK,CAFL;AAAA,MAAA,UAAA,GAAA,CAAA,GAAA,eAAA,CAAA,SAAA,CAAA,EAAA,SAAA,EAAA,CAAA,CAAA;AAAA,MAErBC,GAFqB,GAAA,UAAA,CAAA,CAAA,CAAA;AAAA,MAEhBC,iBAFgB,GAAA,UAAA,CAAA,CAAA,CAAA;;AAI5B,GAAA,GAAA,KAAA,CAAA,SAAA,EAAU,YAAM;AACdA,IAAAA,iBAAiB,CAACF,YAAY,CAAZA,OAAAA,CAAAA,UAAAA,CAAlBE,IAAkBF,CAAD,CAAjBE;AADF,GAAA,EAAA,EAAA;AAJ4B,MAQrBC,QARqB,GAQGJ,OARH,CAAA,QAAA;AAAA,MAQXK,UARW,GAQGL,OARH,CAAA,UAAA;;AAU5B,MAAA,GAAA,EAAS;AACPE,IAAAA,GAAG,CAAHA,IAAAA;AACAA,IAAAA,GAAG,CAAHA,KAAAA,CAAAA,UAAAA,EAAAA,UAAAA;AAEAI,IAAAA,KAAK,CAALA,MAAAA,CAAa;AACXC,MAAAA,KAAK,EAAEH,QAAQ,CADJ,KAAA;AAEXI,MAAAA,MAAM,EAAEJ,QAAQ,CAFL,MAAA;AAGXF,MAAAA,GAAG,EAHQ,GAAA;AAIXG,MAAAA,UAAU,EAJC,UAAA;AAKXI,MAAAA,OAAO,EAAEL,QAAQ,CALN,OAAA;AAMXM,MAAAA,SAAS,EAAEN,QAAQ,CAACM;AANT,KAAbJ;AASAJ,IAAAA,GAAG,CAAHA,OAAAA;AACD;;AAED,SACE,KAAA,CAAA,aAAA,CAAA,QAAA,EAAA;AACE,IAAA,GAAG,EADL,YAAA;AAEE,IAAA,KAAK,EAAEE,QAAQ,CAARA,KAAAA,GAFT,UAAA;AAGE,IAAA,MAAM,EAAEA,QAAQ,CAARA,MAAAA,GAHV,UAAA;AAIE,IAAA,KAAK,EAAE;AACLG,MAAAA,KAAK,EAAA,GAAA,MAAA,CAAKH,QAAQ,CAAb,KAAA,EADA,IACA,CADA;AAELI,MAAAA,MAAM,EAAA,GAAA,MAAA,CAAKJ,QAAQ,CAAb,MAAA,EAFD,IAEC,CAFD;AAGLO,MAAAA,QAAQ,EAHH,UAAA;AAILC,MAAAA,IAAI,EAJC,CAAA;AAKLC,MAAAA,GAAG,EAAE;AALA;AAJT,GAAA,CADF;AAcD;;AAEDC,aAAa,CAAbA,SAAAA,GAAAA,SAAAA;AACAA,aAAa,CAAbA,YAAAA,GAAAA,YAAAA;eAEeA,a","sourcesContent":["// Copyright (c) 2015 Uber Technologies, Inc.\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport * as React from 'react';\nimport {useState, useEffect} from 'react';\nimport * as PropTypes from 'prop-types';\nimport useMapControl, {mapControlPropTypes} from '../components/use-map-control';\n\n/* global window */\nconst pixelRatio = (typeof window !== 'undefined' && window.devicePixelRatio) || 1;\n\nconst propTypes = Object.assign({}, mapControlPropTypes, {\n  redraw: PropTypes.func.isRequired\n});\n\nconst defaultProps = {\n  captureScroll: false,\n  captureDrag: false,\n  captureClick: false,\n  captureDoubleClick: false,\n  capturePointerMove: false\n};\n\nfunction CanvasOverlay(props) {\n  const {context, containerRef} = useMapControl(props);\n  const [ctx, setDrawingContext] = useState(null);\n\n  useEffect(() => {\n    setDrawingContext(containerRef.current.getContext('2d'));\n  }, []);\n\n  const {viewport, isDragging} = context;\n\n  if (ctx) {\n    ctx.save();\n    ctx.scale(pixelRatio, pixelRatio);\n\n    props.redraw({\n      width: viewport.width,\n      height: viewport.height,\n      ctx,\n      isDragging,\n      project: viewport.project,\n      unproject: viewport.unproject\n    });\n\n    ctx.restore();\n  }\n\n  return (\n    <canvas\n      ref={containerRef}\n      width={viewport.width * pixelRatio}\n      height={viewport.height * pixelRatio}\n      style={{\n        width: `${viewport.width}px`,\n        height: `${viewport.height}px`,\n        position: 'absolute',\n        left: 0,\n        top: 0\n      }}\n    />\n  );\n}\n\nCanvasOverlay.propTypes = propTypes;\nCanvasOverlay.defaultProps = defaultProps;\n\nexport default CanvasOverlay;\n"]},"metadata":{},"sourceType":"script"}