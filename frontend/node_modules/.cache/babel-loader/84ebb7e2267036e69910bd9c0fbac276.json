{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar PropTypes = _interopRequireWildcard(require(\"prop-types\"));\n\nvar _mapState = _interopRequireDefault(require(\"../utils/map-state\"));\n\nvar _mapController = require(\"../utils/map-controller\");\n\nvar _version = require(\"../utils/version\");\n\nvar _useMapControl2 = _interopRequireWildcard(require(\"./use-map-control\"));\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        (0, _defineProperty2[\"default\"])(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nvar noop = function noop() {};\n\nvar propTypes = Object.assign({}, _useMapControl2.mapControlPropTypes, {\n  className: PropTypes.string,\n  style: PropTypes.object,\n  onViewStateChange: PropTypes.func,\n  onViewportChange: PropTypes.func,\n  showCompass: PropTypes.bool,\n  showZoom: PropTypes.bool,\n  zoomInLabel: PropTypes.string,\n  zoomOutLabel: PropTypes.string,\n  compassLabel: PropTypes.string\n});\nvar defaultProps = Object.assign({}, _useMapControl2.mapControlDefaultProps, {\n  className: '',\n  showCompass: true,\n  showZoom: true,\n  zoomInLabel: 'Zoom In',\n  zoomOutLabel: 'Zoom Out',\n  compassLabel: 'Reset North'\n});\nvar VERSION_LEGACY = 1;\nvar VERSION_1_6 = 2;\n\nfunction getUIVersion(mapboxVersion) {\n  return (0, _version.compareVersions)(mapboxVersion, '1.6.0') >= 0 ? VERSION_1_6 : VERSION_LEGACY;\n}\n\nfunction updateViewport(context, props, opts) {\n  var viewport = context.viewport;\n  var mapState = new _mapState[\"default\"](Object.assign({}, viewport, opts));\n  var viewState = Object.assign({}, mapState.getViewportProps(), _mapController.LINEAR_TRANSITION_PROPS);\n  var onViewportChange = props.onViewportChange || context.onViewportChange || noop;\n  var onViewStateChange = props.onViewStateChange || context.onViewStateChange || noop;\n  onViewStateChange({\n    viewState: viewState\n  });\n  onViewportChange(viewState);\n}\n\nfunction renderButton(type, label, callback, children) {\n  return React.createElement(\"button\", {\n    key: type,\n    className: \"mapboxgl-ctrl-icon mapboxgl-ctrl-\".concat(type),\n    type: \"button\",\n    title: label,\n    onClick: callback\n  }, children || React.createElement(\"span\", {\n    className: \"mapboxgl-ctrl-icon\",\n    \"aria-hidden\": \"true\"\n  }));\n}\n\nfunction renderCompass(context) {\n  var uiVersion = (0, React.useMemo)(function () {\n    return context.map ? getUIVersion(context.map.version) : VERSION_1_6;\n  }, [context.map]);\n  var bearing = context.viewport.bearing;\n  var style = {\n    transform: \"rotate(\".concat(-bearing, \"deg)\")\n  };\n  return uiVersion === VERSION_1_6 ? React.createElement(\"span\", {\n    className: \"mapboxgl-ctrl-icon\",\n    \"aria-hidden\": \"true\",\n    style: style\n  }) : React.createElement(\"span\", {\n    className: \"mapboxgl-ctrl-compass-arrow\",\n    style: style\n  });\n}\n\nfunction NavigationControl(props) {\n  var _useMapControl = (0, _useMapControl2[\"default\"])(props),\n      context = _useMapControl.context,\n      containerRef = _useMapControl.containerRef;\n\n  var onZoomIn = function onZoomIn() {\n    updateViewport(context, props, {\n      zoom: context.viewport.zoom + 1\n    });\n  };\n\n  var onZoomOut = function onZoomOut() {\n    updateViewport(context, props, {\n      zoom: context.viewport.zoom - 1\n    });\n  };\n\n  var onResetNorth = function onResetNorth() {\n    updateViewport(context, props, {\n      bearing: 0,\n      pitch: 0\n    });\n  };\n\n  var className = props.className,\n      showCompass = props.showCompass,\n      showZoom = props.showZoom,\n      zoomInLabel = props.zoomInLabel,\n      zoomOutLabel = props.zoomOutLabel,\n      compassLabel = props.compassLabel;\n  var style = (0, React.useMemo)(function () {\n    return _objectSpread({\n      position: 'absolute'\n    }, props.style);\n  }, [props.style]);\n  return React.createElement(\"div\", {\n    style: style,\n    className: className\n  }, React.createElement(\"div\", {\n    className: \"mapboxgl-ctrl mapboxgl-ctrl-group\",\n    ref: containerRef\n  }, showZoom && renderButton('zoom-in', zoomInLabel, onZoomIn), showZoom && renderButton('zoom-out', zoomOutLabel, onZoomOut), showCompass && renderButton('compass', compassLabel, onResetNorth, renderCompass(context))));\n}\n\nNavigationControl.propTypes = propTypes;\nNavigationControl.defaultProps = defaultProps;\n\nvar _default = React.memo(NavigationControl);\n\nexports[\"default\"] = _default;","map":{"version":3,"sources":["D:\\Side Projects\\maptravelapp\\frontend\\node_modules\\react-map-gl\\src\\components\\navigation-control.js"],"names":["noop","propTypes","mapControlPropTypes","className","PropTypes","style","onViewStateChange","onViewportChange","showCompass","showZoom","zoomInLabel","zoomOutLabel","compassLabel","string","defaultProps","mapControlDefaultProps","VERSION_LEGACY","VERSION_1_6","viewport","context","mapState","MapState","Object","viewState","LINEAR_TRANSITION_PROPS","props","callback","children","uiVersion","getUIVersion","bearing","transform","containerRef","onZoomIn","updateViewport","zoom","onZoomOut","onResetNorth","pitch","position","renderButton","renderCompass","NavigationControl","React"],"mappings":";;;;;;;;;;;;;AAAA,IAAA,KAAA,GAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AAEA,IAAA,SAAA,GAAA,uBAAA,CAAA,OAAA,CAAA,YAAA,CAAA,CAAA;;AAEA,IAAA,SAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,oBAAA,CAAA,CAAA;;AACA,IAAA,cAAA,GAAA,OAAA,CAAA,yBAAA,CAAA;;AAEA,IAAA,QAAA,GAAA,OAAA,CAAA,kBAAA,CAAA;;AAEA,IAAA,eAAA,GAAA,uBAAA,CAAA,OAAA,CAAA,mBAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAMA,IAAI,GAAG,SAAPA,IAAO,GAAM,CAAnB,CAAA;;AAEA,IAAMC,SAAS,GAAG,MAAM,CAAN,MAAA,CAAA,EAAA,EAAkBC,eAAAA,CAAlB,mBAAA,EAAuC;AAEvDC,EAAAA,SAAS,EAAEC,SAAS,CAFmC,MAAA;AAGvDC,EAAAA,KAAK,EAAED,SAAS,CAHuC,MAAA;AAMvDE,EAAAA,iBAAiB,EAAEF,SAAS,CAN2B,IAAA;AAOvDG,EAAAA,gBAAgB,EAAEH,SAAS,CAP4B,IAAA;AASvDI,EAAAA,WAAW,EAAEJ,SAAS,CATiC,IAAA;AAWvDK,EAAAA,QAAQ,EAAEL,SAAS,CAXoC,IAAA;AAavDM,EAAAA,WAAW,EAAEN,SAAS,CAbiC,MAAA;AAcvDO,EAAAA,YAAY,EAAEP,SAAS,CAdgC,MAAA;AAevDQ,EAAAA,YAAY,EAAER,SAAS,CAACS;AAf+B,CAAvC,CAAlB;AAkBA,IAAMC,YAAY,GAAG,MAAM,CAAN,MAAA,CAAA,EAAA,EAAkBC,eAAAA,CAAlB,sBAAA,EAA0C;AAC7DZ,EAAAA,SAAS,EADoD,EAAA;AAE7DK,EAAAA,WAAW,EAFkD,IAAA;AAG7DC,EAAAA,QAAQ,EAHqD,IAAA;AAI7DC,EAAAA,WAAW,EAJkD,SAAA;AAK7DC,EAAAA,YAAY,EALiD,UAAA;AAM7DC,EAAAA,YAAY,EAAE;AAN+C,CAA1C,CAArB;AAUA,IAAMI,cAAc,GAApB,CAAA;AACA,IAAMC,WAAW,GAAjB,CAAA;;AAEA,SAAA,YAAA,CAAA,aAAA,EAAqC;AACnC,SAAO,CAAA,GAAA,QAAA,CAAA,eAAA,EAAA,aAAA,EAAA,OAAA,KAAA,CAAA,GAAA,WAAA,GAAP,cAAA;AACD;;AAED,SAAA,cAAA,CAAA,OAAA,EAAA,KAAA,EAAA,IAAA,EAA8C;AAAA,MACrCC,QADqC,GACzBC,OADyB,CAAA,QAAA;AAE5C,MAAMC,QAAQ,GAAG,IAAIC,SAAAA,CAAJ,SAAIA,CAAJ,CAAaC,MAAM,CAANA,MAAAA,CAAAA,EAAAA,EAAAA,QAAAA,EAA9B,IAA8BA,CAAb,CAAjB;AACA,MAAMC,SAAS,GAAGD,MAAM,CAANA,MAAAA,CAAAA,EAAAA,EAAkBF,QAAQ,CAA1BE,gBAAkBF,EAAlBE,EAA+CE,cAAAA,CAAjE,uBAAkBF,CAAlB;AAEA,MAAMf,gBAAgB,GAAGkB,KAAK,CAALA,gBAAAA,IAA0BN,OAAO,CAAjCM,gBAAAA,IAAzB,IAAA;AACA,MAAMnB,iBAAiB,GAAGmB,KAAK,CAALA,iBAAAA,IAA2BN,OAAO,CAAlCM,iBAAAA,IAA1B,IAAA;AAGAnB,EAAAA,iBAAiB,CAAC;AAACiB,IAAAA,SAAS,EAATA;AAAD,GAAD,CAAjBjB;AAGAC,EAAAA,gBAAgB,CAAhBA,SAAgB,CAAhBA;AACD;;AAED,SAAA,YAAA,CAAA,IAAA,EAAA,KAAA,EAAA,QAAA,EAAA,QAAA,EAAuD;AACrD,SACE,KAAA,CAAA,aAAA,CAAA,QAAA,EAAA;AACE,IAAA,GAAG,EADL,IAAA;AAEE,IAAA,SAAS,EAAA,oCAAA,MAAA,CAFX,IAEW,CAFX;AAGE,IAAA,IAAI,EAHN,QAAA;AAIE,IAAA,KAAK,EAJP,KAAA;AAKE,IAAA,OAAO,EAAEmB;AALX,GAAA,EAOGC,QAAQ,IAAI,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAM,IAAA,SAAS,EAAf,oBAAA;AAAqC,mBAAY;AAAjD,GAAA,CAPf,CADF;AAWD;;AAED,SAAA,aAAA,CAAA,OAAA,EAAgC;AAC9B,MAAMC,SAAS,GAAG,CAAA,GAAA,KAAA,CAAA,OAAA,EAAQ,YAAA;AAAA,WAAOT,OAAO,CAAPA,GAAAA,GAAcU,YAAY,CAACV,OAAO,CAAPA,GAAAA,CAA3BA,OAA0B,CAA1BA,GAAP,WAAA;AAAR,GAAA,EAA+E,CAC/FA,OAAO,CADT,GAAiG,CAA/E,CAAlB;AAD8B,MAKvBW,OALuB,GAKZX,OAAO,CALK,QAKZA,CALY,OAAA;AAM9B,MAAMd,KAAK,GAAG;AAAC0B,IAAAA,SAAS,EAAA,UAAA,MAAA,CAAY,CAAZ,OAAA,EAAA,MAAA;AAAV,GAAd;AAEA,SAAO,SAAS,KAAT,WAAA,GACL,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAM,IAAA,SAAS,EAAf,oBAAA;AAAqC,mBAArC,MAAA;AAAwD,IAAA,KAAK,EAAE1B;AAA/D,GAAA,CADK,GAGL,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAM,IAAA,SAAS,EAAf,6BAAA;AAA8C,IAAA,KAAK,EAAEA;AAArD,GAAA,CAHF;AAKD;;AAMD,SAAA,iBAAA,CAAA,KAAA,EAAkC;AAAA,MAAA,cAAA,GACA,CAAA,GAAA,eAAA,CAAA,SAAA,CAAA,EADA,KACA,CADA;AAAA,MACzBc,OADyB,GAAA,cAAA,CAAA,OAAA;AAAA,MAChBa,YADgB,GAAA,cAAA,CAAA,YAAA;;AAGhC,MAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACrBC,IAAAA,cAAc,CAAA,OAAA,EAAA,KAAA,EAAiB;AAACC,MAAAA,IAAI,EAAEhB,OAAO,CAAPA,QAAAA,CAAAA,IAAAA,GAAwB;AAA/B,KAAjB,CAAde;AADF,GAAA;;AAIA,MAAME,SAAS,GAAG,SAAZA,SAAY,GAAM;AACtBF,IAAAA,cAAc,CAAA,OAAA,EAAA,KAAA,EAAiB;AAACC,MAAAA,IAAI,EAAEhB,OAAO,CAAPA,QAAAA,CAAAA,IAAAA,GAAwB;AAA/B,KAAjB,CAAde;AADF,GAAA;;AAIA,MAAMG,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzBH,IAAAA,cAAc,CAAA,OAAA,EAAA,KAAA,EAAiB;AAACJ,MAAAA,OAAO,EAAR,CAAA;AAAaQ,MAAAA,KAAK,EAAE;AAApB,KAAjB,CAAdJ;AADF,GAAA;;AAXgC,MAezB/B,SAfyB,GAeoDsB,KAfpD,CAAA,SAAA;AAAA,MAedjB,WAfc,GAeoDiB,KAfpD,CAAA,WAAA;AAAA,MAeDhB,QAfC,GAeoDgB,KAfpD,CAAA,QAAA;AAAA,MAeSf,WAfT,GAeoDe,KAfpD,CAAA,WAAA;AAAA,MAesBd,YAftB,GAeoDc,KAfpD,CAAA,YAAA;AAAA,MAeoCb,YAfpC,GAeoDa,KAfpD,CAAA,YAAA;AAgBhC,MAAMpB,KAAK,GAAG,CAAA,GAAA,KAAA,CAAA,OAAA,EAAQ,YAAA;AAAA,WAAA,aAAA,CAAA;AAAQkC,MAAAA,QAAQ,EAAE;AAAlB,KAAA,EAAiCd,KAAK,CAAtC,KAAA,CAAA;AAAR,GAAA,EAAwD,CAACA,KAAK,CAA5E,KAAsE,CAAxD,CAAd;AAEA,SACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,KAAK,EAAV,KAAA;AAAmB,IAAA,SAAS,EAAEtB;AAA9B,GAAA,EACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAd,mCAAA;AAAmD,IAAA,GAAG,EAAE6B;AAAxD,GAAA,EACGvB,QAAQ,IAAI+B,YAAY,CAAA,SAAA,EAAA,WAAA,EAD3B,QAC2B,CAD3B,EAEG/B,QAAQ,IAAI+B,YAAY,CAAA,UAAA,EAAA,YAAA,EAF3B,SAE2B,CAF3B,EAGGhC,WAAW,IAAIgC,YAAY,CAAA,SAAA,EAAA,YAAA,EAAA,YAAA,EAAwCC,aAAa,CALvF,OAKuF,CAArD,CAH9B,CADF,CADF;AASD;;AAEDC,iBAAiB,CAAjBA,SAAAA,GAAAA,SAAAA;AACAA,iBAAiB,CAAjBA,YAAAA,GAAAA,YAAAA;;eAEeC,KAAK,CAALA,IAAAA,CAAAA,iBAAAA,C","sourcesContent":["import * as React from 'react';\nimport {useMemo} from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport MapState from '../utils/map-state';\nimport {LINEAR_TRANSITION_PROPS} from '../utils/map-controller';\n\nimport {compareVersions} from '../utils/version';\n\nimport useMapControl, {mapControlDefaultProps, mapControlPropTypes} from './use-map-control';\n\nconst noop = () => {};\n\nconst propTypes = Object.assign({}, mapControlPropTypes, {\n  // Custom className\n  className: PropTypes.string,\n  style: PropTypes.object,\n  // Callbacks fired when the user interacted with the map. The object passed to the callbacks\n  // contains viewport properties such as `longitude`, `latitude`, `zoom` etc.\n  onViewStateChange: PropTypes.func,\n  onViewportChange: PropTypes.func,\n  // Show/hide compass button\n  showCompass: PropTypes.bool,\n  // Show/hide zoom buttons\n  showZoom: PropTypes.bool,\n  // Custom labels assigned to the controls\n  zoomInLabel: PropTypes.string,\n  zoomOutLabel: PropTypes.string,\n  compassLabel: PropTypes.string\n});\n\nconst defaultProps = Object.assign({}, mapControlDefaultProps, {\n  className: '',\n  showCompass: true,\n  showZoom: true,\n  zoomInLabel: 'Zoom In',\n  zoomOutLabel: 'Zoom Out',\n  compassLabel: 'Reset North'\n});\n\n// Mapbox version flags. CSS classes were changed in certain versions.\nconst VERSION_LEGACY = 1;\nconst VERSION_1_6 = 2;\n\nfunction getUIVersion(mapboxVersion) {\n  return compareVersions(mapboxVersion, '1.6.0') >= 0 ? VERSION_1_6 : VERSION_LEGACY;\n}\n\nfunction updateViewport(context, props, opts) {\n  const {viewport} = context;\n  const mapState = new MapState(Object.assign({}, viewport, opts));\n  const viewState = Object.assign({}, mapState.getViewportProps(), LINEAR_TRANSITION_PROPS);\n\n  const onViewportChange = props.onViewportChange || context.onViewportChange || noop;\n  const onViewStateChange = props.onViewStateChange || context.onViewStateChange || noop;\n\n  // Call new style callback\n  onViewStateChange({viewState});\n\n  // Call old style callback\n  onViewportChange(viewState);\n}\n\nfunction renderButton(type, label, callback, children) {\n  return (\n    <button\n      key={type}\n      className={`mapboxgl-ctrl-icon mapboxgl-ctrl-${type}`}\n      type=\"button\"\n      title={label}\n      onClick={callback}\n    >\n      {children || <span className=\"mapboxgl-ctrl-icon\" aria-hidden=\"true\" />}\n    </button>\n  );\n}\n\nfunction renderCompass(context) {\n  const uiVersion = useMemo(() => (context.map ? getUIVersion(context.map.version) : VERSION_1_6), [\n    context.map\n  ]);\n\n  const {bearing} = context.viewport;\n  const style = {transform: `rotate(${-bearing}deg)`};\n\n  return uiVersion === VERSION_1_6 ? (\n    <span className=\"mapboxgl-ctrl-icon\" aria-hidden=\"true\" style={style} />\n  ) : (\n    <span className=\"mapboxgl-ctrl-compass-arrow\" style={style} />\n  );\n}\n\n/*\n * PureComponent doesn't update when context changes, so\n * implementing our own shouldComponentUpdate here.\n */\nfunction NavigationControl(props) {\n  const {context, containerRef} = useMapControl(props);\n\n  const onZoomIn = () => {\n    updateViewport(context, props, {zoom: context.viewport.zoom + 1});\n  };\n\n  const onZoomOut = () => {\n    updateViewport(context, props, {zoom: context.viewport.zoom - 1});\n  };\n\n  const onResetNorth = () => {\n    updateViewport(context, props, {bearing: 0, pitch: 0});\n  };\n\n  const {className, showCompass, showZoom, zoomInLabel, zoomOutLabel, compassLabel} = props;\n  const style = useMemo(() => ({position: 'absolute', ...props.style}), [props.style]);\n\n  return (\n    <div style={style} className={className}>\n      <div className=\"mapboxgl-ctrl mapboxgl-ctrl-group\" ref={containerRef}>\n        {showZoom && renderButton('zoom-in', zoomInLabel, onZoomIn)}\n        {showZoom && renderButton('zoom-out', zoomOutLabel, onZoomOut)}\n        {showCompass && renderButton('compass', compassLabel, onResetNorth, renderCompass(context))}\n      </div>\n    </div>\n  );\n}\n\nNavigationControl.propTypes = propTypes;\nNavigationControl.defaultProps = defaultProps;\n\nexport default React.memo(NavigationControl);\n"]},"metadata":{},"sourceType":"script"}