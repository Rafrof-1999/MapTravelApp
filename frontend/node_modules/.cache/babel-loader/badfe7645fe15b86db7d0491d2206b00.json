{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = useMapControl;\nexports.mapControlPropTypes = exports.mapControlDefaultProps = void 0;\n\nvar _react = require(\"react\");\n\nvar PropTypes = _interopRequireWildcard(require(\"prop-types\"));\n\nvar _mapContext = _interopRequireDefault(require(\"./map-context\"));\n\nvar mapControlDefaultProps = {\n  captureScroll: false,\n  captureDrag: true,\n  captureClick: true,\n  captureDoubleClick: true,\n  capturePointerMove: false\n};\nexports.mapControlDefaultProps = mapControlDefaultProps;\nvar mapControlPropTypes = {\n  captureScroll: PropTypes.bool,\n  captureDrag: PropTypes.bool,\n  captureClick: PropTypes.bool,\n  captureDoubleClick: PropTypes.bool,\n  capturePointerMove: PropTypes.bool\n};\nexports.mapControlPropTypes = mapControlPropTypes;\n\nfunction onMount(thisRef) {\n  var ref = thisRef.containerRef.current;\n  var eventManager = thisRef.context.eventManager;\n\n  if (!ref || !eventManager) {\n    return undefined;\n  }\n\n  var events = {\n    wheel: function wheel(evt) {\n      var props = thisRef.props;\n\n      if (props.captureScroll) {\n        evt.stopPropagation();\n      }\n\n      if (props.onScroll) {\n        props.onScroll(evt, thisRef);\n      }\n    },\n    panstart: function panstart(evt) {\n      var props = thisRef.props;\n\n      if (props.captureDrag) {\n        evt.stopPropagation();\n      }\n\n      if (props.onDragStart) {\n        props.onDragStart(evt, thisRef);\n      }\n    },\n    anyclick: function anyclick(evt) {\n      var props = thisRef.props;\n\n      if (props.captureClick) {\n        evt.stopPropagation();\n      }\n\n      if (props.onNativeClick) {\n        props.onNativeClick(evt, thisRef);\n      }\n    },\n    click: function click(evt) {\n      var props = thisRef.props;\n\n      if (props.captureClick) {\n        evt.stopPropagation();\n      }\n\n      if (props.onClick) {\n        props.onClick(evt, thisRef);\n      }\n    },\n    dblclick: function dblclick(evt) {\n      var props = thisRef.props;\n\n      if (props.captureDoubleClick) {\n        evt.stopPropagation();\n      }\n\n      if (props.onDoubleClick) {\n        props.onDoubleClick(evt, thisRef);\n      }\n    },\n    pointermove: function pointermove(evt) {\n      var props = thisRef.props;\n\n      if (props.capturePointerMove) {\n        evt.stopPropagation();\n      }\n\n      if (props.onPointerMove) {\n        props.onPointerMove(evt, thisRef);\n      }\n    }\n  };\n  eventManager.watch(events, ref);\n  return function () {\n    eventManager.off(events);\n  };\n}\n\nfunction useMapControl() {\n  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var context = (0, _react.useContext)(_mapContext[\"default\"]);\n  var containerRef = (0, _react.useRef)(null);\n\n  var _thisRef = (0, _react.useRef)({\n    props: props,\n    state: {},\n    context: context,\n    containerRef: containerRef\n  });\n\n  var thisRef = _thisRef.current;\n  thisRef.props = props;\n  thisRef.context = context;\n  (0, _react.useEffect)(function () {\n    return onMount(thisRef);\n  }, [context.eventManager]);\n  return thisRef;\n}","map":{"version":3,"sources":["D:\\Side Projects\\maptravelapp\\frontend\\node_modules\\react-map-gl\\src\\components\\use-map-control.js"],"names":["mapControlDefaultProps","captureScroll","captureDrag","captureClick","captureDoubleClick","capturePointerMove","mapControlPropTypes","PropTypes","bool","ref","thisRef","eventManager","events","wheel","props","evt","panstart","anyclick","click","dblclick","pointermove","context","MapContext","containerRef","_thisRef","state","onMount"],"mappings":";;;;;;;;;;;;AAAA,IAAA,MAAA,GAAA,OAAA,CAAA,OAAA,CAAA;;AACA,IAAA,SAAA,GAAA,uBAAA,CAAA,OAAA,CAAA,YAAA,CAAA,CAAA;;AACA,IAAA,WAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,eAAA,CAAA,CAAA;;AAEO,IAAMA,sBAAsB,GAAG;AACpCC,EAAAA,aAAa,EADuB,KAAA;AAEpCC,EAAAA,WAAW,EAFyB,IAAA;AAGpCC,EAAAA,YAAY,EAHwB,IAAA;AAIpCC,EAAAA,kBAAkB,EAJkB,IAAA;AAKpCC,EAAAA,kBAAkB,EAAE;AALgB,CAA/B;;AAQA,IAAMC,mBAAmB,GAAG;AAEjCL,EAAAA,aAAa,EAAEM,SAAS,CAFS,IAAA;AAIjCL,EAAAA,WAAW,EAAEK,SAAS,CAJW,IAAA;AAMjCJ,EAAAA,YAAY,EAAEI,SAAS,CANU,IAAA;AAQjCH,EAAAA,kBAAkB,EAAEG,SAAS,CARI,IAAA;AAUjCF,EAAAA,kBAAkB,EAAEE,SAAS,CAACC;AAVG,CAA5B;;;AAaP,SAAA,OAAA,CAAA,OAAA,EAA0B;AACxB,MAAMC,GAAG,GAAGC,OAAO,CAAPA,YAAAA,CAAZ,OAAA;AADwB,MAEjBC,YAFiB,GAEDD,OAAO,CAFN,OAEDA,CAFC,YAAA;;AAGxB,MAAI,CAAA,GAAA,IAAQ,CAAZ,YAAA,EAA2B;AACzB,WAAA,SAAA;AACD;;AAED,MAAME,MAAM,GAAG;AACbC,IAAAA,KAAK,EAAE,SAAA,KAAA,CAAA,GAAA,EAAO;AAAA,UACLC,KADK,GACIJ,OADJ,CAAA,KAAA;;AAEZ,UAAII,KAAK,CAAT,aAAA,EAAyB;AACvBC,QAAAA,GAAG,CAAHA,eAAAA;AACD;;AACD,UAAID,KAAK,CAAT,QAAA,EAAoB;AAClBA,QAAAA,KAAK,CAALA,QAAAA,CAAAA,GAAAA,EAAAA,OAAAA;AACD;AARU,KAAA;AAUbE,IAAAA,QAAQ,EAAE,SAAA,QAAA,CAAA,GAAA,EAAO;AAAA,UACRF,KADQ,GACCJ,OADD,CAAA,KAAA;;AAEf,UAAII,KAAK,CAAT,WAAA,EAAuB;AACrBC,QAAAA,GAAG,CAAHA,eAAAA;AACD;;AACD,UAAID,KAAK,CAAT,WAAA,EAAuB;AACrBA,QAAAA,KAAK,CAALA,WAAAA,CAAAA,GAAAA,EAAAA,OAAAA;AACD;AAjBU,KAAA;AAmBbG,IAAAA,QAAQ,EAAE,SAAA,QAAA,CAAA,GAAA,EAAO;AAAA,UACRH,KADQ,GACCJ,OADD,CAAA,KAAA;;AAEf,UAAII,KAAK,CAAT,YAAA,EAAwB;AACtBC,QAAAA,GAAG,CAAHA,eAAAA;AACD;;AACD,UAAID,KAAK,CAAT,aAAA,EAAyB;AACvBA,QAAAA,KAAK,CAALA,aAAAA,CAAAA,GAAAA,EAAAA,OAAAA;AACD;AA1BU,KAAA;AA4BbI,IAAAA,KAAK,EAAE,SAAA,KAAA,CAAA,GAAA,EAAO;AAAA,UACLJ,KADK,GACIJ,OADJ,CAAA,KAAA;;AAEZ,UAAII,KAAK,CAAT,YAAA,EAAwB;AACtBC,QAAAA,GAAG,CAAHA,eAAAA;AACD;;AACD,UAAID,KAAK,CAAT,OAAA,EAAmB;AACjBA,QAAAA,KAAK,CAALA,OAAAA,CAAAA,GAAAA,EAAAA,OAAAA;AACD;AAnCU,KAAA;AAqCbK,IAAAA,QAAQ,EAAE,SAAA,QAAA,CAAA,GAAA,EAAO;AAAA,UACRL,KADQ,GACCJ,OADD,CAAA,KAAA;;AAEf,UAAII,KAAK,CAAT,kBAAA,EAA8B;AAC5BC,QAAAA,GAAG,CAAHA,eAAAA;AACD;;AACD,UAAID,KAAK,CAAT,aAAA,EAAyB;AACvBA,QAAAA,KAAK,CAALA,aAAAA,CAAAA,GAAAA,EAAAA,OAAAA;AACD;AA5CU,KAAA;AA8CbM,IAAAA,WAAW,EAAE,SAAA,WAAA,CAAA,GAAA,EAAO;AAAA,UACXN,KADW,GACFJ,OADE,CAAA,KAAA;;AAElB,UAAII,KAAK,CAAT,kBAAA,EAA8B;AAC5BC,QAAAA,GAAG,CAAHA,eAAAA;AACD;;AACD,UAAID,KAAK,CAAT,aAAA,EAAyB;AACvBA,QAAAA,KAAK,CAALA,aAAAA,CAAAA,GAAAA,EAAAA,OAAAA;AACD;AACF;AAtDY,GAAf;AAwDAH,EAAAA,YAAY,CAAZA,KAAAA,CAAAA,MAAAA,EAAAA,GAAAA;AAGA,SAAO,YAAM;AACXA,IAAAA,YAAY,CAAZA,GAAAA,CAAAA,MAAAA;AADF,GAAA;AAGD;;AAEc,SAAA,aAAA,GAAmC;AAAA,MAAZG,KAAY,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAJ,EAAI;AAChD,MAAMO,OAAO,GAAG,CAAA,GAAA,MAAA,CAAA,UAAA,EAAWC,WAAAA,CAA3B,SAA2BA,CAAX,CAAhB;AACA,MAAMC,YAAY,GAAG,CAAA,GAAA,MAAA,CAAA,MAAA,EAArB,IAAqB,CAArB;;AACA,MAAMC,QAAQ,GAAG,CAAA,GAAA,MAAA,CAAA,MAAA,EAAO;AAACV,IAAAA,KAAK,EAAN,KAAA;AAAQW,IAAAA,KAAK,EAAb,EAAA;AAAmBJ,IAAAA,OAAO,EAA1B,OAAA;AAA4BE,IAAAA,YAAY,EAAZA;AAA5B,GAAP,CAAjB;;AACA,MAAMb,OAAO,GAAGc,QAAQ,CAAxB,OAAA;AAEAd,EAAAA,OAAO,CAAPA,KAAAA,GAAAA,KAAAA;AACAA,EAAAA,OAAO,CAAPA,OAAAA,GAAAA,OAAAA;AAEA,GAAA,GAAA,MAAA,CAAA,SAAA,EAAU,YAAA;AAAA,WAAMgB,OAAO,CAAb,OAAa,CAAb;AAAV,GAAA,EAAkC,CAACL,OAAO,CAA1C,YAAkC,CAAlC;AAEA,SAAA,OAAA;AACD","sourcesContent":["import {useContext, useRef, useEffect} from 'react';\nimport * as PropTypes from 'prop-types';\nimport MapContext from './map-context';\n\nexport const mapControlDefaultProps = {\n  captureScroll: false,\n  captureDrag: true,\n  captureClick: true,\n  captureDoubleClick: true,\n  capturePointerMove: false\n};\n\nexport const mapControlPropTypes = {\n  /** Event handling */\n  captureScroll: PropTypes.bool,\n  // Stop map pan & rotate\n  captureDrag: PropTypes.bool,\n  // Stop map click\n  captureClick: PropTypes.bool,\n  // Stop map double click\n  captureDoubleClick: PropTypes.bool,\n  // Stop map pointer move\n  capturePointerMove: PropTypes.bool\n};\n\nfunction onMount(thisRef) {\n  const ref = thisRef.containerRef.current;\n  const {eventManager} = thisRef.context;\n  if (!ref || !eventManager) {\n    return undefined;\n  }\n\n  const events = {\n    wheel: evt => {\n      const {props} = thisRef;\n      if (props.captureScroll) {\n        evt.stopPropagation();\n      }\n      if (props.onScroll) {\n        props.onScroll(evt, thisRef);\n      }\n    },\n    panstart: evt => {\n      const {props} = thisRef;\n      if (props.captureDrag) {\n        evt.stopPropagation();\n      }\n      if (props.onDragStart) {\n        props.onDragStart(evt, thisRef);\n      }\n    },\n    anyclick: evt => {\n      const {props} = thisRef;\n      if (props.captureClick) {\n        evt.stopPropagation();\n      }\n      if (props.onNativeClick) {\n        props.onNativeClick(evt, thisRef);\n      }\n    },\n    click: evt => {\n      const {props} = thisRef;\n      if (props.captureClick) {\n        evt.stopPropagation();\n      }\n      if (props.onClick) {\n        props.onClick(evt, thisRef);\n      }\n    },\n    dblclick: evt => {\n      const {props} = thisRef;\n      if (props.captureDoubleClick) {\n        evt.stopPropagation();\n      }\n      if (props.onDoubleClick) {\n        props.onDoubleClick(evt, thisRef);\n      }\n    },\n    pointermove: evt => {\n      const {props} = thisRef;\n      if (props.capturePointerMove) {\n        evt.stopPropagation();\n      }\n      if (props.onPointerMove) {\n        props.onPointerMove(evt, thisRef);\n      }\n    }\n  };\n  eventManager.watch(events, ref);\n\n  // Clean up\n  return () => {\n    eventManager.off(events);\n  };\n}\n\nexport default function useMapControl(props = {}) {\n  const context = useContext(MapContext);\n  const containerRef = useRef(null);\n  const _thisRef = useRef({props, state: {}, context, containerRef});\n  const thisRef = _thisRef.current;\n\n  thisRef.props = props;\n  thisRef.context = context;\n\n  useEffect(() => onMount(thisRef), [context.eventManager]);\n\n  return thisRef;\n}\n"]},"metadata":{},"sourceType":"script"}